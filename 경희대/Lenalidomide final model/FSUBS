      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::CLGFR,CLALB,CLCOV,TVCL,CL,TVV,V
      REAL(KIND=DPSIZE), POINTER ::TVKA,KA,S2,IPRED,IRES,IWRES,Y
      REAL(KIND=DPSIZE), POINTER ::A000032,A000034,A000036,A000038
      REAL(KIND=DPSIZE), POINTER ::A000040,A000042,A000043,A000044
      REAL(KIND=DPSIZE), POINTER ::D000001,D000002,D000003,D000004
      REAL(KIND=DPSIZE), POINTER ::D000005,D000006,D000007,D000008
      REAL(KIND=DPSIZE), POINTER ::D000009,D000049,D000052,D000053
      REAL(KIND=DPSIZE), POINTER ::D000054,D000050,D000055,D000056
      REAL(KIND=DPSIZE), POINTER ::D000051,D000057,D000061,D000100
      REAL(KIND=DPSIZE), POINTER ::D000101,D000102,D000062,D000107
      REAL(KIND=DPSIZE), POINTER ::D000108,D000063,D000111,D000132
      REAL(KIND=DPSIZE), POINTER ::D000138,D000137,D000136,D000131
      REAL(KIND=DPSIZE), POINTER ::D000135,D000134,D000130,D000133
      REAL(KIND=DPSIZE), POINTER ::C000032,D000141,D000140,D000139
      REAL(KIND=DPSIZE), POINTER ::C000033
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      CLGFR=>COM(000001);CLALB=>COM(000002);CLCOV=>COM(000003)
      TVCL=>COM(000004);CL=>COM(000005);TVV=>COM(000006)
      V=>COM(000007);TVKA=>COM(000008);KA=>COM(000009);S2=>COM(000010)
      IPRED=>COM(000011);IRES=>COM(000012);IWRES=>COM(000013)
      Y=>COM(000014);A000032=>COM(000015);A000034=>COM(000016)
      A000036=>COM(000017);A000038=>COM(000018);A000040=>COM(000019)
      A000042=>COM(000020);A000043=>COM(000021);A000044=>COM(000022)
      D000001=>COM(000023);D000002=>COM(000024);D000003=>COM(000025)
      D000004=>COM(000026);D000005=>COM(000027);D000006=>COM(000028)
      D000007=>COM(000029);D000008=>COM(000030);D000009=>COM(000031)
      D000049=>COM(000032);D000052=>COM(000033);D000053=>COM(000034)
      D000054=>COM(000035);D000050=>COM(000036);D000055=>COM(000037)
      D000056=>COM(000038);D000051=>COM(000039);D000057=>COM(000040)
      D000061=>COM(000041);D000100=>COM(000042);D000101=>COM(000043)
      D000102=>COM(000044);D000062=>COM(000045);D000107=>COM(000046)
      D000108=>COM(000047);D000063=>COM(000048);D000111=>COM(000049)
      D000132=>COM(000050);D000138=>COM(000051);D000137=>COM(000052)
      D000136=>COM(000053);D000131=>COM(000054);D000135=>COM(000055)
      D000134=>COM(000056);D000130=>COM(000057);D000133=>COM(000058)
      C000032=>COM(000059);D000141=>COM(000060);D000140=>COM(000061)
      D000139=>COM(000062);C000033=>COM(000063)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE PK(ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,IRGG,GG,NETAS)      
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_INT, ONLY: IERPRD,IERPRDU,NETEXT,IQUIT                        
      USE NMPRD_CHAR,ONLY: ETEXT                                              
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      USE NMBAYES_REAL, ONLY: LDF                                             
      USE NMBAYES_INT, ONLY: FLDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                          
      REAL(KIND=DPSIZE) :: EVTREC                                               
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS              
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*) 
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                      
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   4
      CALL GETETA(ETA)                                                          
      IF (IQUIT == 1) RETURN                                                    
      RETURN                                                                    
      ENDIF                                                                     
      IF (NEWIND /= 2) THEN
      IF (ICALL == 4) THEN
      CALL SIMETA(ETA)
      ELSE
      CALL GETETA(ETA)
      ENDIF
      IF (IQUIT == 1) RETURN
      ENDIF
 !  level            0
      BSA=EVTREC(NVNT,011)
      GFR=EVTREC(NVNT,015)
      ALB=EVTREC(NVNT,016)
      B000001=GFR-43.57D0 
      B000002=THETA(007)*B000001 
      B000003=DEXP(B000002) 
      CLGFR=B000003 
      IF(ALB <= 4.20D0)THEN 
      B000006=ALB-4.2D0 
      B000007=1.D0+THETA(005)*B000006 
      CLALB=B000007 
      ENDIF 
      IF(ALB >  4.20D0)THEN 
      B000011=ALB-4.2D0 
      B000012=1.D0+THETA(006)*B000011 
      CLALB=B000012 
      ENDIF 
      CLCOV=CLALB*CLGFR 
      TVCL=THETA(001) 
      TVCL=CLCOV*TVCL 
      B000015=BSA/1.64D0 
      B000016=B000015**1 
      B000017=DEXP(ETA(001)) 
      CL=TVCL*B000017*B000016 
      B000019=TVCL 
      TVV=THETA(002) 
      B000020=BSA/1.64D0 
      IF(B000020 == 0.D0.AND.THETA(004) <= 0.D0)THEN 
      IERPRD=1
      ETEXT(1)='PK SUBROUTINE: ERROR IN COMPUTATION'
      ETEXT(2)='ATTEMPT TO COMPUTE 0**POWER WITH POWER<=0.'
      RETURN
      ENDIF 
      IF(B000020 <  0.D0)THEN 
      IERPRD=1
      ETEXT(1)='PK SUBROUTINE: ERROR IN COMPUTATION'
      ETEXT(2)='ATTEMPT TO COMPUTE BASE**POWER WITH BASE<0.'
      RETURN
      ENDIF 
      B000021=0.D0 
      IF(B000020 == 0.D0)THEN 
      B000021=1.D0 
      ENDIF 
      B000022=1.D0-B000021 
      B000023=B000020+B000021 
      B000024=B000023**THETA(004) 
      B000025=B000022*B000024 
      B000026=DEXP(ETA(002)) 
      V=TVV*B000026*B000025 
      TVKA=THETA(003) 
      B000029=DEXP(ETA(003)) 
      KA=TVKA*B000029 
      S2=V/1000.D0 
      IF (FIRSTEM == 1) THEN
      B000018=B000019*B000016 
!                      A000032 = DERIVATIVE OF CL W.R.T. ETA(001)
      A000032=B000018*B000017 
      B000027=TVV*B000025 
!                      A000036 = DERIVATIVE OF V W.R.T. ETA(002)
      A000036=B000027*B000026 
!                      A000040 = DERIVATIVE OF KA W.R.T. ETA(003)
      A000040=TVKA*B000029 
      B000031=1.D0/1000.D0 
!                      A000043 = DERIVATIVE OF S2 W.R.T. ETA(002)
      A000043=B000031*A000036 
      GG(0001,1,1)=CL
      GG(0001,0002,1)=A000032
      GG(0002,1,1)=V
      GG(0002,0003,1)=A000036
      GG(0003,1,1)=KA
      GG(0003,0004,1)=A000040
      GG(0004,1,1)=S2
      GG(0004,0003,1)=A000043
      ELSE
      GG(0001,1,1)=CL
      GG(0002,1,1)=V
      GG(0003,1,1)=KA
      GG(0004,1,1)=S2
      ENDIF
      IF (MSEC == 1) THEN
!                      A000034 = DERIVATIVE OF A000032 W.R.T. ETA(001)
      A000034=B000018*B000017 
!                      A000038 = DERIVATIVE OF A000036 W.R.T. ETA(002)
      A000038=B000027*B000026 
!                      A000042 = DERIVATIVE OF A000040 W.R.T. ETA(003)
      A000042=TVKA*B000029 
!                      A000044 = DERIVATIVE OF A000043 W.R.T. ETA(002)
      A000044=B000031*A000038 
      GG(0001,0002,0002)=A000034
      GG(0002,0003,0003)=A000038
      GG(0003,0004,0004)=A000042
      GG(0004,0003,0003)=A000044
      ENDIF
      RETURN
      END
      SUBROUTINE ERROR (ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,F,G,HH)       
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IQUIT,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: NEWL2
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: EVTREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS                       
      DIMENSION :: IDEF(*),THETA(*),EVTREC(IREV,*),INDXS(*)                   
      REAL(KIND=DPSIZE) :: G(GERD,*),HH(HERD,*)                               
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                    
      CALL ASSOCNMPRD4
      IDEF(2)=-1
      IDEF(3)=000
      RETURN
      ENDIF
      IF (ICALL == 4) THEN
      IF (NEWL2 == 1) THEN
      CALL SIMEPS(EPS)
      IF (IQUIT == 1) RETURN
      ENDIF
      ENDIF
      D000001=G(001,1)
      D000002=G(002,1)
      D000003=G(003,1)
 !  level            0
      DV=EVTREC(NVNT,006)
      IPRED=F 
      IRES=DV-IPRED 
      IWRES=IRES/IPRED 
      B000009=1.D0+EPS(001) 
      Y=F*B000009+EPS(002) 
!                      C000032 = DERIVATIVE OF Y W.R.T. EPS(001)
      C000032=F 
!                      C000033 = DERIVATIVE OF Y W.R.T. EPS(002)
      C000033=1.D0 
      IF (FIRSTEM == 1) THEN !1
!                      D000049 = DERIVATIVE OF IRES W.R.T. ETA(001)
      D000049=-D000001 
!                      D000050 = DERIVATIVE OF IRES W.R.T. ETA(002)
      D000050=-D000002 
!                      D000051 = DERIVATIVE OF IRES W.R.T. ETA(003)
      D000051=-D000003 
      B000001=1.D0/IPRED 
!                      D000058 = DERIVATIVE OF IWRES W.R.T. ETA(003)
      D000058=B000001*D000051 
!                      D000059 = DERIVATIVE OF IWRES W.R.T. ETA(002)
      D000059=B000001*D000050 
!                      D000060 = DERIVATIVE OF IWRES W.R.T. ETA(001)
      D000060=B000001*D000049 
      B000002=-IRES/IPRED/IPRED 
!                      D000061 = DERIVATIVE OF IWRES W.R.T. ETA(001)
      D000061=B000002*D000001+D000060 
!                      D000062 = DERIVATIVE OF IWRES W.R.T. ETA(002)
      D000062=B000002*D000002+D000059 
!                      D000063 = DERIVATIVE OF IWRES W.R.T. ETA(003)
      D000063=B000002*D000003+D000058 
!                      D000130 = DERIVATIVE OF Y W.R.T. ETA(003)
      D000130=B000009*D000003 
!                      D000131 = DERIVATIVE OF Y W.R.T. ETA(002)
      D000131=B000009*D000002 
!                      D000132 = DERIVATIVE OF Y W.R.T. ETA(001)
      D000132=B000009*D000001 
!                      D000139 = DERIVATIVE OF C000032 W.R.T. ETA(003)
      D000139=D000003 
!                      D000140 = DERIVATIVE OF C000032 W.R.T. ETA(002)
      D000140=D000002 
!                      D000141 = DERIVATIVE OF C000032 W.R.T. ETA(001)
      D000141=D000001 
      G(001,1)=D000132
      G(002,1)=D000131
      G(003,1)=D000130
      ENDIF !1
      HH(001,1)=C000032
      HH(002,1)=C000033
      IF (FIRSTEM == 1) THEN !2
      HH(001,002)=D000141
      HH(001,003)=D000140
      HH(001,004)=D000139
      ENDIF !2
      IF (MSEC == 1) THEN
      D000004=G(001,002)
      D000005=G(002,002)
      D000006=G(002,003)
      D000007=G(003,002)
      D000008=G(003,003)
      D000009=G(003,004)
!                      D000052 = DERIVATIVE OF D000049 W.R.T. ETA(001)
      D000052=-D000004 
!                      D000053 = DERIVATIVE OF D000049 W.R.T. ETA(002)
      D000053=-D000005 
!                      D000054 = DERIVATIVE OF D000049 W.R.T. ETA(003)
      D000054=-D000007 
!                      D000055 = DERIVATIVE OF D000050 W.R.T. ETA(002)
      D000055=-D000006 
!                      D000056 = DERIVATIVE OF D000050 W.R.T. ETA(003)
      D000056=-D000008 
!                      D000057 = DERIVATIVE OF D000051 W.R.T. ETA(003)
      D000057=-D000009 
      B000005=-1.D0/IPRED/IPRED 
!                      D000070 = DERIVATIVE OF B000001 W.R.T. ETA(003)
      D000070=B000005*D000003 
!                      D000071 = DERIVATIVE OF B000001 W.R.T. ETA(002)
      D000071=B000005*D000002 
!                      D000072 = DERIVATIVE OF B000001 W.R.T. ETA(001)
      D000072=B000005*D000001 
!                      D000073 = DERIVATIVE OF D000058 W.R.T. ETA(003)
      D000073=D000051*D000070 
!                      D000074 = DERIVATIVE OF D000058 W.R.T. ETA(003)
      D000074=B000001*D000057+D000073 
!                      D000075 = DERIVATIVE OF D000059 W.R.T. ETA(002)
      D000075=D000050*D000071 
!                      D000076 = DERIVATIVE OF D000059 W.R.T. ETA(003)
      D000076=D000050*D000070 
!                      D000077 = DERIVATIVE OF D000059 W.R.T. ETA(003)
      D000077=B000001*D000056+D000076 
!                      D000078 = DERIVATIVE OF D000059 W.R.T. ETA(002)
      D000078=B000001*D000055+D000075 
!                      D000079 = DERIVATIVE OF D000060 W.R.T. ETA(001)
      D000079=D000049*D000072 
!                      D000080 = DERIVATIVE OF D000060 W.R.T. ETA(002)
      D000080=D000049*D000071 
!                      D000081 = DERIVATIVE OF D000060 W.R.T. ETA(003)
      D000081=D000049*D000070 
!                      D000082 = DERIVATIVE OF D000060 W.R.T. ETA(003)
      D000082=B000001*D000054+D000081 
!                      D000083 = DERIVATIVE OF D000060 W.R.T. ETA(002)
      D000083=B000001*D000053+D000080 
!                      D000084 = DERIVATIVE OF D000060 W.R.T. ETA(001)
      D000084=B000001*D000052+D000079 
      B000006=-1.D0/IPRED/IPRED 
!                      D000085 = DERIVATIVE OF B000002 W.R.T. ETA(003)
      D000085=B000006*D000051 
!                      D000086 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000086=B000006*D000050 
!                      D000087 = DERIVATIVE OF B000002 W.R.T. ETA(001)
      D000087=B000006*D000049 
      B000007=IRES/IPRED/IPRED/IPRED 
!                      D000088 = DERIVATIVE OF B000002 W.R.T. ETA(003)
      D000088=B000007*D000003+D000085 
!                      D000089 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000089=B000007*D000002+D000086 
!                      D000090 = DERIVATIVE OF B000002 W.R.T. ETA(001)
      D000090=B000007*D000001+D000087 
      B000008=IRES/IPRED/IPRED/IPRED 
!                      D000091 = DERIVATIVE OF B000002 W.R.T. ETA(003)
      D000091=B000008*D000003+D000088 
!                      D000092 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000092=B000008*D000002+D000089 
!                      D000093 = DERIVATIVE OF B000002 W.R.T. ETA(001)
      D000093=B000008*D000001+D000090 
!                      D000094 = DERIVATIVE OF D000061 W.R.T. ETA(001)
      D000094=D000001*D000093 
!                      D000095 = DERIVATIVE OF D000061 W.R.T. ETA(002)
      D000095=D000001*D000092 
!                      D000096 = DERIVATIVE OF D000061 W.R.T. ETA(003)
      D000096=D000001*D000091 
!                      D000097 = DERIVATIVE OF D000061 W.R.T. ETA(001)
      D000097=B000002*D000004+D000094 
!                      D000098 = DERIVATIVE OF D000061 W.R.T. ETA(002)
      D000098=B000002*D000005+D000095 
!                      D000099 = DERIVATIVE OF D000061 W.R.T. ETA(003)
      D000099=B000002*D000007+D000096 
!                      D000100 = DERIVATIVE OF D000061 W.R.T. ETA(001)
      D000100=D000084+D000097 
!                      D000101 = DERIVATIVE OF D000061 W.R.T. ETA(002)
      D000101=D000083+D000098 
!                      D000102 = DERIVATIVE OF D000061 W.R.T. ETA(003)
      D000102=D000082+D000099 
!                      D000103 = DERIVATIVE OF D000062 W.R.T. ETA(002)
      D000103=D000002*D000092 
!                      D000104 = DERIVATIVE OF D000062 W.R.T. ETA(003)
      D000104=D000002*D000091 
!                      D000105 = DERIVATIVE OF D000062 W.R.T. ETA(002)
      D000105=B000002*D000006+D000103 
!                      D000106 = DERIVATIVE OF D000062 W.R.T. ETA(003)
      D000106=B000002*D000008+D000104 
!                      D000107 = DERIVATIVE OF D000062 W.R.T. ETA(002)
      D000107=D000078+D000105 
!                      D000108 = DERIVATIVE OF D000062 W.R.T. ETA(003)
      D000108=D000077+D000106 
!                      D000109 = DERIVATIVE OF D000063 W.R.T. ETA(003)
      D000109=D000003*D000091 
!                      D000110 = DERIVATIVE OF D000063 W.R.T. ETA(003)
      D000110=B000002*D000009+D000109 
!                      D000111 = DERIVATIVE OF D000063 W.R.T. ETA(003)
      D000111=D000074+D000110 
!                      D000133 = DERIVATIVE OF D000130 W.R.T. ETA(003)
      D000133=B000009*D000009 
!                      D000134 = DERIVATIVE OF D000131 W.R.T. ETA(003)
      D000134=B000009*D000008 
!                      D000135 = DERIVATIVE OF D000131 W.R.T. ETA(002)
      D000135=B000009*D000006 
!                      D000136 = DERIVATIVE OF D000132 W.R.T. ETA(003)
      D000136=B000009*D000007 
!                      D000137 = DERIVATIVE OF D000132 W.R.T. ETA(002)
      D000137=B000009*D000005 
!                      D000138 = DERIVATIVE OF D000132 W.R.T. ETA(001)
      D000138=B000009*D000004 
      G(001,002)=D000138
      G(002,002)=D000137
      G(002,003)=D000135
      G(003,002)=D000136
      G(003,003)=D000134
      G(003,004)=D000133
      ENDIF
      F=Y
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=7
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=5
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=0
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=16
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=30
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM10'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM11'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM13'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM15'; F_SIZES(23)=0
      NAME_FSIZES(24)='LIM16'; F_SIZES(24)=0
      NAME_FSIZES(25)='MAXRECID'; F_SIZES(25)=0
      NAME_FSIZES(26)='PC'; F_SIZES(26)=0
      NAME_FSIZES(27)='PCMORE'; F_SIZES(27)=0
      NAME_FSIZES(28)='PCT'; F_SIZES(28)=1
      NAME_FSIZES(29)='PIR'; F_SIZES(29)=1
      NAME_FSIZES(30)='PD'; F_SIZES(30)=16
      NAME_FSIZES(31)='PAL'; F_SIZES(31)=0
      NAME_FSIZES(32)='MAXFCN'; F_SIZES(32)=0
      NAME_FSIZES(33)='MAXIC'; F_SIZES(33)=0
      NAME_FSIZES(34)='PG'; F_SIZES(34)=0
      NAME_FSIZES(35)='NPOPMIXMAX'; F_SIZES(35)=0
      NAME_FSIZES(36)='MAXOMEG'; F_SIZES(36)=3
      NAME_FSIZES(37)='MAXPTHETA'; F_SIZES(37)=10
      NAME_FSIZES(38)='MAXITER'; F_SIZES(38)=20
      NAME_FSIZES(39)='ISAMPLEMAX'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMTMP'; F_SIZES(40)=0
      NAME_FSIZES(41)='DIMCNS'; F_SIZES(41)=0
      NAME_FSIZES(42)='DIMNEW'; F_SIZES(42)=0
      NAME_FSIZES(43)='PDT'; F_SIZES(43)=1
      NAME_FSIZES(44)='LADD_MAX'; F_SIZES(44)=0
      NAME_FSIZES(45)='MAXSIDL'; F_SIZES(45)=0
      NAME_FSIZES(46)='NTT'; F_SIZES(46)=7
      NAME_FSIZES(47)='NOMEG'; F_SIZES(47)=3
      NAME_FSIZES(48)='NSIGM'; F_SIZES(48)=2
      NAME_FSIZES(49)='PPDT'; F_SIZES(49)=1
      NAME_FSIZES(50)='PAST_SIZE'; F_SIZES(50)=0
      NAME_FSIZES(51)='MAXNRDS'; F_SIZES(51)=0
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_INT, ONLY: IERPRD,IERPRDU,NETEXT,IQUIT
      USE NMPRD_CHAR,ONLY: ETEXT
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMBAYES_REAL, ONLY: LDF
      USE NMBAYES_INT, ONLY: FLDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      INTEGER NEWIND
      REAL(KIND=DPSIZE) :: EVTREC
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*)
      RETURN
      END
